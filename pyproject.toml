[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "magic-shell"
version = "0.4.0"
description = "A magical wrapper around your real shell - cosmetic effects with zero interference"
authors = [
    {name = "Magic Shell Contributors"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities"
]
keywords = ["shell", "terminal", "pty", "wrapper", "magic", "effects"]
dependencies = [
    "prompt-toolkit>=3.0.0",
    "rich>=13.0.0",
    "tomli>=2.0.0; python_version<'3.11'",
    "tomli-w>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pexpect>=4.8.0",
]
test = [
    "pytest>=7.0.0",
    "pexpect>=4.8.0",
]

[project.urls]
Homepage = "https://github.com/robinoscarsson/magic_shell"
Repository = "https://github.com/robinoscarsson/magic_shell"
"Bug Tracker" = "https://github.com/robinoscarsson/magic_shell/issues"

[project.scripts]
magic-shell = "magic_shell.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["magic_shell*"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
]
ignore = [
    "E501",  # line too long, handled by formatter
    "S101",  # assert statements (OK in tests)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S101", "S602", "S603", "S607"]  # Allow test-specific patterns

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests requiring external binaries",
    "pty: marks tests requiring PTY functionality (Unix only)"
]